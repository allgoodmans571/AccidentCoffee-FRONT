[{"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\index.js":"1","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\App.js":"2","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\reportWebVitals.js":"3","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Registration.js":"4","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\PersonalData.js":"5","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Profile.js":"6","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\StartScreen.js":"7","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\Scrollbar.js":"8","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\ScrollbarItem.js":"9","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalItem.js":"10","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\context\\context.js":"11","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\MainScreen.js":"12","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\EnterScreen.js":"13","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalMatch.js":"14","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalEmtyDB.js":"15"},{"size":501,"mtime":1612390926934,"results":"16","hashOfConfig":"17"},{"size":5265,"mtime":1612974206399,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":5955,"mtime":1612969623369,"results":"20","hashOfConfig":"17"},{"size":7394,"mtime":1612972133577,"results":"21","hashOfConfig":"17"},{"size":2796,"mtime":1612538974830,"results":"22","hashOfConfig":"17"},{"size":2216,"mtime":1612956781552,"results":"23","hashOfConfig":"17"},{"size":3086,"mtime":1612970929611,"results":"24","hashOfConfig":"17"},{"size":1277,"mtime":1612868737870,"results":"25","hashOfConfig":"17"},{"size":3813,"mtime":1612999548269,"results":"26","hashOfConfig":"17"},{"size":97,"mtime":1612391721143,"results":"27","hashOfConfig":"17"},{"size":3523,"mtime":1612970941191,"results":"28","hashOfConfig":"17"},{"size":3957,"mtime":1612974188871,"results":"29","hashOfConfig":"17"},{"size":5234,"mtime":1612973236657,"results":"30","hashOfConfig":"17"},{"size":648,"mtime":1612949400917,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ruapaa",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\index.js",[],["66","67"],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\App.js",["68","69"],"import \"./App.css\";\r\nimport React, { useEffect, useReducer, useState } from \"react\";\r\nimport Context from \"./context/context\";\r\nimport StartScreen from \"./Screens/StartScreenPackage/StartScreen\";\r\nimport Registration from \"./Screens/Registration\";\r\nimport PersonalData from \"./Screens/PersonalData\";\r\nimport MainScreen from \"./Screens/MainScreen\";\r\nimport EnterScreen from \"./Screens/EnterScreen\";\r\n// import Profile from \"./Screens/Profile\";\r\n\r\nfunction App() {\r\n  const [arr, setArr] = useState([]);\r\n  const [userName, setName] = useState(\"name\");\r\n\r\n  function setUserName(name) {\r\n    // console.log(name);\r\n    setName(userName);\r\n    // console.log(userName);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://68.183.12.32:8080/getAllUsers\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setArr(data);\r\n      });\r\n  }, []);\r\n\r\n  // const [matchModal, setMatchModal] = React.useState({\r\n  //   isOpen: false,\r\n  //   image: \"\",\r\n  //   name: \"\",\r\n  //   position: \"\",\r\n  //   email: \"\",\r\n  //   telegram: \"\",\r\n  //   lifePos: \"\",\r\n  //   teamStatus: \"\",\r\n  //   workPlace: \"\",\r\n  //   projectTime: \"\",\r\n  //   tags: [],\r\n  // });\r\n\r\n  function findMatch() {\r\n    let name = dataState.name;\r\n    let response = fetch(\"http://68.183.12.32:8080/getMatch\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({ name }),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        init(\r\n          `${data.image}`,\r\n          `${data.name}`,\r\n          `${data.position}`,\r\n          `${data.email}`,\r\n          `${data.telegram}`\r\n        );\r\n        add(\r\n          `${data.lifePos}`,\r\n          `${data.teamStatus}`,\r\n          `${data.wordPlace}`,\r\n          `${data.projectTime}`,\r\n          data.tags\r\n        );\r\n      });\r\n    setTimeout(() => showMatch(), 500);\r\n  }\r\n\r\n  const [statePage, setStatePage] = React.useState(0);\r\n  const [modal, setModal] = React.useState({\r\n    isOpen: false,\r\n    image: \"\",\r\n    name: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    telegram: \"\",\r\n    lifePos: \"\",\r\n    teamStatus: \"\",\r\n    workPlace: \"\",\r\n    projectTime: \"\",\r\n    tags: [],\r\n  });\r\n\r\n  // TODO передавать объект, избавиться от такой кучи аргументов\r\n  function hanldeModal(\r\n    operUser,\r\n    imageUser,\r\n    nameUser,\r\n    positionUser,\r\n    emailUser,\r\n    telegramUser,\r\n    lifePosUser,\r\n    teamStatusUser,\r\n    workPlaceUser,\r\n    projectTimeUser,\r\n    tagsUser\r\n  ) {\r\n    setModal({\r\n      isOpen: operUser,\r\n      image: imageUser,\r\n      name: nameUser,\r\n      position: positionUser,\r\n      email: emailUser,\r\n      telegram: telegramUser,\r\n      lifePos: lifePosUser,\r\n      teamStatus: teamStatusUser,\r\n      workPlace: workPlaceUser,\r\n      projectTime: projectTimeUser,\r\n      tags: tagsUser,\r\n    });\r\n  }\r\n\r\n  const components = [\r\n    <StartScreen />,\r\n    <EnterScreen />,\r\n    <Registration />,\r\n    <PersonalData />,\r\n    <MainScreen />,\r\n  ];\r\n\r\n  async function send() {\r\n    console.log(dataState);\r\n    let response = await fetch(\"http://68.183.12.32:8080/registration\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(dataState),\r\n    });\r\n  }\r\n\r\n  const reducer = (state, action) => {\r\n    // console.log(action.wordPlace);\r\n    switch (action.type) {\r\n      case \"init\":\r\n        return {\r\n          image: action.linkImage,\r\n          name: action.name,\r\n          position: action.position,\r\n          email: action.email,\r\n          telegram: action.telegram,\r\n        };\r\n      case \"add\":\r\n        return {\r\n          ...state,\r\n          lifePos: action.lifePos,\r\n          teamStatus: action.teamStatus,\r\n          wordPlace: action.wordPlace,\r\n          projectTime: action.projectTime,\r\n          tags: action.tags,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [dataState, dispatchData] = useReducer(reducer, {\r\n    image: \"\",\r\n    name: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    telegram: \"\",\r\n    lifePos: \"\",\r\n    teamStatus: \"\",\r\n    wordPlace: \"\",\r\n    projectTime: \"\",\r\n    tags: [],\r\n  });\r\n\r\n  const init = (linkImage, name, position, email, telegram) =>\r\n    dispatchData({ type: \"init\", linkImage, name, position, email, telegram });\r\n\r\n  const add = (lifePos, teamStatus, wordPlace, projectTime, tags) =>\r\n    dispatchData({\r\n      type: \"add\",\r\n      lifePos,\r\n      teamStatus,\r\n      wordPlace,\r\n      projectTime,\r\n      tags,\r\n    });\r\n\r\n  function setActivePanel(i) {\r\n    setStatePage(i);\r\n  }\r\n\r\n  const [match, setMatch] = useState(false);\r\n\r\n  function showMatch() {\r\n    setMatch(!match);\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        setActivePanel,\r\n        hanldeModal,\r\n        modal,\r\n        init,\r\n        add,\r\n        send,\r\n        dataState,\r\n        arr,\r\n        match,\r\n        showMatch,\r\n        findMatch,\r\n        setUserName,\r\n      }}\r\n    >\r\n      <div className=\"App\">{components[statePage]}</div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\reportWebVitals.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Registration.js",["70"],"import React, { useContext } from \"react\";\r\nimport Context from \"../context/context\";\r\nimport icon from \"../images/icon.png\";\r\nimport logo from \"../images/logo.svg\";\r\nimport cameraImage from \"../images/cameraImage.svg\";\r\n\r\nfunction Registration() {\r\n  const { setActivePanel, init, setUserName } = useContext(Context);\r\n  let userPic;\r\n\r\n  async function handleSubmit() {\r\n    let userName =\r\n      document.querySelector(\"#firstName\").value +\r\n      \" \" +\r\n      document.querySelector(\"#lastName\").value;\r\n    let userPosition = document.querySelector(\"#position\").value;\r\n    let userEmail = document.querySelector(\"#corpEmail\").value;\r\n    let userTelegram = document.querySelector(\"#telegram\").value;\r\n\r\n    init(\r\n      `${userPic}`,\r\n      `${userName}`,\r\n      `${userPosition}`,\r\n      `${userEmail}`,\r\n      `${userTelegram}`\r\n    );\r\n    setUserName(userName);\r\n  }\r\n\r\n  function handleFiles() {\r\n    var reader = new FileReader(),\r\n      input = document.getElementById(\"loaderPhoto\").files[0];\r\n\r\n    reader.addEventListener(\r\n      \"loadend\",\r\n      function (result) {\r\n        document.querySelector(\r\n          \".loadPhoto\"\r\n        ).style.background = `url(${result.target.result})`;\r\n        document.querySelector(\".loadPhoto\").style.backgroundSize =\r\n          \"300px auto\";\r\n\r\n        document.querySelector(\".loadPhoto\").style.backgroundRepeat =\r\n          \"no-repeat\";\r\n        document.querySelector(\".loadPhoto\").style.backgroundPosition =\r\n          \"center\";\r\n\r\n        userPic = result.target.result;\r\n        console.log(userPic);\r\n      },\r\n      false\r\n    );\r\n    reader.readAsDataURL(input);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"6rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <form id=\"survey-form\">\r\n        <div id=\"reqForm\">\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"36px\",\r\n                width: \"36px\",\r\n                paddingRight: \"1rem\",\r\n              }}\r\n              src={icon}\r\n              alt=\"icon\"\r\n            />\r\n            <img\r\n              style={{\r\n                borderWidth: \"0px\",\r\n                height: \"23px\",\r\n                width: \"97px\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n              src={logo}\r\n              alt=\"logo\"\r\n            />\r\n          </div>\r\n          <h1 style={{ fontSize: \"50px\", marginBottom: \"3rem\" }}>\r\n            Регистрация\r\n          </h1>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"40% 75%\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <label\r\n              style={{\r\n                width: \"300px\",\r\n                height: \"300px\",\r\n                borderRadius: \"10rem\",\r\n                backgroundSize: \"cover\",\r\n              }}\r\n              htmlFor=\"loaderPhoto\"\r\n              className=\"loadPhoto\"\r\n            >\r\n              <img\r\n                style={{\r\n                  width: \"50px\",\r\n                  height: \"50px\",\r\n                  margin: \"40% 0\",\r\n                }}\r\n                src={cameraImage}\r\n              />\r\n            </label>\r\n            <div className=\"fields\">\r\n              <input\r\n                style={{\r\n                  position: \"absolute\",\r\n                  opacity: 0,\r\n                  top: \"-100%\",\r\n                }}\r\n                id=\"loaderPhoto\"\r\n                type=\"file\"\r\n                multiple\r\n                onChange={handleFiles}\r\n                accept=\"image/jpeg,image/png\"\r\n                name=\"file\"\r\n              />\r\n              <label htmlFor=\"firstName\">\r\n                <input\r\n                  className=\"input_fields_text\"\r\n                  type=\"text\"\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  placeholder=\"Имя\"\r\n                  // required\r\n                />\r\n              </label>\r\n              <label htmlFor=\"lastName\">\r\n                <input\r\n                  className=\"input_fields_text\"\r\n                  type=\"text\"\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  placeholder=\"Фамилия\"\r\n                  // required\r\n                />\r\n              </label>\r\n              <label htmlFor=\"position\">\r\n                <input\r\n                  className=\"input_fields_text\"\r\n                  type=\"text\"\r\n                  id=\"position\"\r\n                  name=\"position\"\r\n                  placeholder=\"Должность\"\r\n                  // required\r\n                />\r\n              </label>\r\n              <label htmlFor=\"corpEmail\">\r\n                <input\r\n                  className=\"input_fields_text\"\r\n                  type=\"email\"\r\n                  id=\"corpEmail\"\r\n                  name=\"corpEmail\"\r\n                  placeholder=\"Рабочая почта\"\r\n                  // required\r\n                />\r\n              </label>\r\n              <label htmlFor=\"telegram\">\r\n                <input\r\n                  className=\"input_fields_text\"\r\n                  type=\"test\"\r\n                  id=\"telegram\"\r\n                  name=\"telegram\"\r\n                  placeholder=\"Telegram\"\r\n                  // required\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: \"3rem\" }}>\r\n            <button\r\n              className=\"startButton\"\r\n              type=\"submit\"\r\n              form=\"survey-form\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                handleSubmit();\r\n                // setData(data);\r\n                setActivePanel(3);\r\n              }}\r\n            >\r\n              <strong>Следующий шаг</strong>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\PersonalData.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Profile.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\StartScreen.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\Scrollbar.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\ScrollbarItem.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalItem.js",["71"],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\context\\context.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\MainScreen.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\EnterScreen.js",["72"],"import React, { useContext } from \"react\";\r\nimport Context from \"../context/context\";\r\nimport icon from \"../images/icon.png\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nfunction EnterScreen() {\r\n  const { setActivePanel, init, add, findMatch, setUserName, arr } = useContext(\r\n    Context\r\n  );\r\n\r\n  async function handleSubmit() {\r\n    let name =\r\n      document.querySelector(\"#firstName\").value +\r\n      \" \" +\r\n      document.querySelector(\"#lastName\").value;\r\n\r\n    let response = await fetch(\"http://68.183.12.32:8080/getMatch\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({ name }),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        init(\r\n          `${data.image}`,\r\n          `${data.name}`,\r\n          `${data.position}`,\r\n          `${data.email}`,\r\n          `${data.telegram}`\r\n        );\r\n        add(\r\n          `${data.lifePos}`,\r\n          `${data.teamStatus}`,\r\n          `${data.wordPlace}`,\r\n          `${data.projectTime}`,\r\n          data.tags\r\n        );\r\n\r\n        setUserName(data.name);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"6rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <form id=\"survey-form\">\r\n        <div id=\"reqForm\">\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"36px\",\r\n                width: \"36px\",\r\n                paddingRight: \"1rem\",\r\n              }}\r\n              src={icon}\r\n              alt=\"icon\"\r\n            />\r\n            <img\r\n              style={{\r\n                borderWidth: \"0px\",\r\n                height: \"23px\",\r\n                width: \"97px\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n              src={logo}\r\n              alt=\"logo\"\r\n            />\r\n          </div>\r\n          <h1 style={{ fontSize: \"50px\", marginBottom: \"3rem\" }}>Вход</h1>\r\n          <label htmlFor=\"firstName\">\r\n            <input\r\n              className=\"input_fields_text\"\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"Имя\"\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor=\"lastName\">\r\n            <input\r\n              className=\"input_fields_text\"\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Фамилия\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <div\r\n            className=\"selectInput\"\r\n            style={{\r\n              marginTop: \"3rem\",\r\n              gridTemplateColumns: \"43% 50%\",\r\n            }}\r\n          >\r\n            <button\r\n              className=\"req_Back_Button\"\r\n              type=\"submit\"\r\n              onClick={() => setActivePanel(0)}\r\n            >\r\n              <strong>Назад</strong>\r\n            </button>\r\n            <button\r\n              className=\"startButton\"\r\n              type=\"submit\"\r\n              form=\"survey-form\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                handleSubmit();\r\n                setActivePanel(4);\r\n                arr.length > 1 && findMatch();\r\n              }}\r\n            >\r\n              Продолжить\r\n            </button>\r\n          </div>\r\n\r\n          {/* <div style={{ marginTop: \"3rem\" }}>\r\n            <button\r\n              className=\"startButton\"\r\n              type=\"submit\"\r\n              form=\"survey-form\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                handleSubmit();\r\n                setActivePanel(4);\r\n              }}\r\n            >\r\n              <strong>Войти</strong>\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnterScreen;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalMatch.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalEmtyDB.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":48,"column":9,"nodeType":"79","messageId":"80","endLine":48,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":131,"column":9,"nodeType":"79","messageId":"80","endLine":131,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":107,"column":15,"nodeType":"83","endLine":114,"endColumn":17},{"ruleId":"77","severity":1,"message":"84","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":17,"column":9,"nodeType":"79","messageId":"80","endLine":17,"endColumn":17},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'icon' is defined but never used.","no-global-assign","no-unsafe-negation"]
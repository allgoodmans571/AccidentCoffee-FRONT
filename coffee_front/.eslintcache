[{"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/index.js":"1","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/App.js":"2","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/reportWebVitals.js":"3","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/context/context.js":"4","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/Registration.js":"5","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/Profile.js":"6","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/PersonalData.js":"7","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/StartScreenPackage/StartScreen.js":"8","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/StartScreenPackage/Scrollbar.js":"9","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Modal/ModalItem.js":"10","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/StartScreenPackage/ScrollbarItem.js":"11","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/MainScreen.js":"12"},{"size":501,"mtime":1612451826501,"results":"13","hashOfConfig":"14"},{"size":3306,"mtime":1612817611611,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612451826502,"results":"16","hashOfConfig":"14"},{"size":92,"mtime":1612451826500,"results":"17","hashOfConfig":"14"},{"size":3491,"mtime":1612818292332,"results":"18","hashOfConfig":"14"},{"size":2708,"mtime":1612780633354,"results":"19","hashOfConfig":"14"},{"size":7370,"mtime":1612818077202,"results":"20","hashOfConfig":"14"},{"size":1807,"mtime":1612780633355,"results":"21","hashOfConfig":"14"},{"size":1842,"mtime":1612817611676,"results":"22","hashOfConfig":"14"},{"size":3523,"mtime":1612817611605,"results":"23","hashOfConfig":"14"},{"size":842,"mtime":1612780633355,"results":"24","hashOfConfig":"14"},{"size":3243,"mtime":1612817611608,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17jmc74",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/index.js",[],["55","56"],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/App.js",["57","58","59"],"import \"./App.css\";\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport Context from \"./context/context\";\nimport StartScreen from \"./Screens/StartScreenPackage/StartScreen\";\nimport Registration from \"./Screens/Registration\";\nimport PersonalData from \"./Screens/PersonalData\";\nimport MainScreen from \"./Screens/MainScreen\";\n// import Profile from \"./Screens/Profile\";\n\nfunction App() {\n  const [arr, setArr] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://68.183.12.32:8080/getAllUsers\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setArr(data);\n      });\n  }, []);\n\n  const [statePage, setStatePage] = React.useState(0);\n  const [modal, setModal] = React.useState({\n    isOpen: false,\n    image: \"\",\n    name: \"\",\n    position: \"\",\n    // email: \"\",\n    // telegram: \"\",\n    // lifePos: \"\",\n    // comStatus: \"\",\n    // workPlace: \"\",\n    // projectTime: \"\",\n    tags: [],\n  });\n\n  function hanldeModal(operUser, imageUser, nameUser, positionUser) {\n    setModal({\n      isOpen: operUser,\n      image: imageUser,\n      name: nameUser,\n      position: positionUser,\n      tags: [\"tag\", \"tag\", \"tag\"],\n    });\n  }\n\n  const components = [\n    <StartScreen />,\n    <Registration />,\n    <PersonalData />,\n    <MainScreen />,\n  ];\n\n  function adder(userList) {\n    userList.map((user) => {\n      arr.users.push({\n        linkImage: \"https://institute.asiakz.com/files/default/avatar.png\",\n        name: user.name,\n        position: user.position,\n        id: user._id,\n      });\n    });\n  }\n\n  async function send() {\n    console.log(dataState);\n    let response = await fetch(\"http://68.183.12.32:8080/registration\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(dataState),\n    });\n  }\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"init\":\n        return {\n          name: action.name,\n          position: action.position,\n          email: action.email,\n          telegram: action.telegram,\n        };\n      case \"add\":\n        return {\n          ...state,\n          lifePos: action.lifePos,\n          teamStatus: action.teamStatus,\n          wordPlace: action.wordPlace,\n          projectTime: action.projectTime,\n          tags: action.tags,\n        };\n      default:\n        return state;\n    }\n  };\n\n  const [dataState, dispatchData] = useReducer(reducer, {\n    name: \"\",\n    position: \"\",\n    email: \"\",\n    telegram: \"\",\n    lifePos: \"\",\n    teamStatus: \"\",\n    wordPlace: \"\",\n    projectTime: \"\",\n    tags: [],\n  });\n\n  const init = (name, position, email, telegram) =>\n    dispatchData({ type: \"init\", name, position, email, telegram });\n  const add = (lifePos, teamStatus, wordPlace, projectTime, tags) =>\n    dispatchData({\n      type: \"add\",\n      lifePos,\n      teamStatus,\n      wordPlace,\n      projectTime,\n      tags,\n    });\n\n  function setActivePanel(i) {\n    setStatePage(i);\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        setActivePanel,\n        hanldeModal,\n        modal,\n        init,\n        add,\n        send,\n        dataState,\n        arr,\n      }}\n    >\n      <div className=\"App\">{components[statePage]}</div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/reportWebVitals.js",[],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/context/context.js",[],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/Registration.js",[],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/Profile.js",[],["60","61"],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/PersonalData.js",["62","63"],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/StartScreenPackage/StartScreen.js",[],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/StartScreenPackage/Scrollbar.js",[],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Modal/ModalItem.js",["64"],"import React, { useContext } from \"react\";\nimport \"./ModalItem.css\";\nimport Context from \"../context/context\";\n\nfunction ModalItem() {\n  const { hanldeModal, modal } = useContext(Context);\n\n  return (\n    <div>\n      {modal.isOpen && (\n        <div className=\"modal\">\n          <button\n            className=\"backgroundButton\"\n            onClick={() => hanldeModal(false)}\n          />\n          <div className=\"profile\">\n            <div className=\"personalInfo\">\n              <div>\n                <img\n                  className=\"profilePhoto\"\n                  src={modal.image}\n                  alt=\"Фото коллеги №2\"\n                />\n                <button\n                  style={{\n                    position: 'relative',\n                    left: 0,\n                    bottom: 0,\n                    width: \"40px\",\n                    height: \"40px\",\n                    box: \"border-box\",\n                    border: \"2px solid #ccc\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                  onClick={() => hanldeModal(false)}\n                ></button>\n              </div>\n              <div>\n                <p style={{ fontSize: \"25px\" }}>\n                  <strong>{modal.name}</strong>\n                </p>\n                <p style={{ fontSize: \"20px\", marginTop: \"-1rem\" }}>\n                  {modal.position}\n                </p>\n                <p>Telegramm: info.telegram</p>\n              </div>\n            </div>\n            <div className=\"personalData\">\n              <div className=\"personalChoose\">\n                <ol>\n                  <li>\n                    <strong>Жизненная позиция:</strong> <p>info.lifePos</p>\n                  </li>\n                  <li>\n                    <strong>Командный статус:</strong> <p>info.comStatus</p>\n                  </li>\n                </ol>\n              </div>\n              <div className=\"personalChoose\">\n                <ol>\n                  <li>\n                    <strong>Место работы:</strong> <p>info.workPlace</p>\n                  </li>\n                  <li>\n                    <strong>В отношениях с проектом:</strong>{\" \"}\n                    <p>info.projectTime</p>\n                  </li>\n                </ol>\n              </div>\n            </div>\n            <div className=\"tags\">\n              <div className=\"personalTags\">\n                <p style={{ color: \"#56c1ff\" }}>\n                  {modal.tags.map((tag) => {\n                    return (\n                      //TODO кошмар переделать\n                      <strong key={tag}> {tag} &nbsp;</strong>\n                    );\n                  })}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ModalItem;\n","/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/StartScreenPackage/ScrollbarItem.js",[],"/Users/alex/Library/repos/AccidentCoffee-FRONT/coffee_front/src/Screens/MainScreen.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { useContext } from \"react\";\nimport ModalItem from \"../Modal/ModalItem\";\nimport icon from \"../images/icon.png\";\nimport logo from \"../images/logo.svg\";\nimport ScroollbarItem from \"../Screens/StartScreenPackage/ScrollbarItem\";\nimport Context from \"../context/context\";\n\nfunction MainScreen() {\n  const { hanldeModal, dataState, arr } = useContext(Context);\n  let linkImage = \"https://institute.asiakz.com/files/default/avatar.png\";\n\n  console.log(arr);\n\n  return (\n    <div>\n      <div className=\"headerMain\">\n        <div className=\"logotype\">\n          <img\n            style={{ height: \"36px\", width: \"36px\", paddingRight: \"1rem\" }}\n            src={icon}\n            alt=\"icon\"\n          />\n          <img\n            style={{\n              borderWidth: \"0px\",\n              height: \"23px\",\n              width: \"97px\",\n              marginBottom: \"5px\",\n            }}\n            src={logo}\n            alt=\"logo\"\n          />\n        </div>\n        <div>\n          <div className=\"matchProfileBar\">\n            <div className=\"matchProfilePos\">\n              <button\n                className=\"profileButton\"\n                onClick={() => {\n                  hanldeModal(\n                    true,\n                    dataState.linkImage,\n                    dataState.name,\n                    dataState.position,\n                    dataState.email,\n                    dataState.telegram,\n                    dataState.lifePos,\n                    dataState.comStatus,\n                    dataState.workPlace,\n                    dataState.projectTime,\n                    dataState.tags\n                  );\n                }}\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mainBlock\">\n        <div></div>\n        <div className=\"tags\">\n          <p\n            style={{\n              fontSize: \"17px\",\n            }}\n          >\n            По интересам:\n          </p>\n          <div className=\"tag\">\n            <a>cпорт</a>\n          </div>\n          <div className=\"tag\">\n            <a>сериалы</a>\n          </div>\n          <div className=\"tag\">\n            <a>фильмы</a>\n          </div>\n          <div className=\"tag\">\n            <a>готовка</a>\n          </div>\n          <div className=\"tag\">\n            <a>музыка</a>\n          </div>\n          <div className=\"tag\">\n            <a>зож</a>\n          </div>\n          <div className=\"tag\">\n            <a>эко</a>\n          </div>\n          <div className=\"tag\">\n            <a>ит</a>\n          </div>\n          <div className=\"tag\">\n            <a>языки</a>\n          </div>\n          <div className=\"tag\">\n            <a>киберспорт</a>\n          </div>\n        </div>\n        <div className=\"itemsBar\">\n          {arr.map((item) => {\n            return (\n              <ScroollbarItem\n                linkItem={linkImage}\n                nameItem={item.name}\n                positionItem={item.position}\n                key={item.id}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <ModalItem />\n    </div>\n  );\n}\n\nexport default MainScreen;\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":55,"column":12,"nodeType":"87","messageId":"88","endLine":55,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":56,"column":25,"nodeType":"91","messageId":"92","endLine":56,"endColumn":27},{"ruleId":"85","severity":1,"message":"93","line":68,"column":9,"nodeType":"87","messageId":"88","endLine":68,"endColumn":17},{"ruleId":"81","replacedBy":"94"},{"ruleId":"83","replacedBy":"95"},{"ruleId":"85","severity":1,"message":"96","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":16},{"ruleId":"85","severity":1,"message":"97","line":10,"column":12,"nodeType":"87","messageId":"88","endLine":10,"endColumn":23},{"ruleId":"85","severity":1,"message":"98","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":20},{"ruleId":"85","severity":1,"message":"99","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"100","line":1,"column":28,"nodeType":"87","messageId":"88","endLine":1,"endColumn":38},{"ruleId":"101","severity":1,"message":"102","line":65,"column":11,"nodeType":"103","endLine":71,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":74,"column":11,"nodeType":"103","endLine":80,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":89,"column":17,"nodeType":"103","endLine":96,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":101,"column":17,"nodeType":"103","endLine":101,"endColumn":82},{"ruleId":"101","severity":1,"message":"106","line":117,"column":13,"nodeType":"103","endLine":117,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":120,"column":13,"nodeType":"103","endLine":120,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":123,"column":13,"nodeType":"103","endLine":123,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":126,"column":13,"nodeType":"103","endLine":126,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":129,"column":13,"nodeType":"103","endLine":129,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":132,"column":13,"nodeType":"103","endLine":132,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":135,"column":13,"nodeType":"103","endLine":135,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":138,"column":13,"nodeType":"103","endLine":138,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":141,"column":13,"nodeType":"103","endLine":141,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":144,"column":13,"nodeType":"103","endLine":144,"endColumn":16},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'adder' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'response' is assigned a value but never used.",["107"],["108"],"'render' is assigned a value but never used.","'ForceUpdate' is defined but never used.","'ModalContext' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]
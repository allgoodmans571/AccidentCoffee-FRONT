[{"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\index.js":"1","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\App.js":"2","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\reportWebVitals.js":"3","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Registration.js":"4","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\PersonalData.js":"5","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Profile.js":"6","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\StartScreen.js":"7","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\Scrollbar.js":"8","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\ScrollbarItem.js":"9","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalItem.js":"10","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\context\\context.js":"11","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\MainScreen.js":"12","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\EnterScreen.js":"13","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalMatch.js":"14","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalEmtyDB.js":"15"},{"size":501,"mtime":1612390926934,"results":"16","hashOfConfig":"17"},{"size":6126,"mtime":1613342019977,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":7156,"mtime":1613342001707,"results":"20","hashOfConfig":"17"},{"size":20528,"mtime":1613341971707,"results":"21","hashOfConfig":"17"},{"size":2796,"mtime":1612538974830,"results":"22","hashOfConfig":"17"},{"size":2233,"mtime":1613341794932,"results":"23","hashOfConfig":"17"},{"size":2918,"mtime":1613104221350,"results":"24","hashOfConfig":"17"},{"size":1373,"mtime":1613104221352,"results":"25","hashOfConfig":"17"},{"size":4316,"mtime":1613341888243,"results":"26","hashOfConfig":"17"},{"size":97,"mtime":1612391721143,"results":"27","hashOfConfig":"17"},{"size":2814,"mtime":1613335068165,"results":"28","hashOfConfig":"17"},{"size":4570,"mtime":1613341944270,"results":"29","hashOfConfig":"17"},{"size":6118,"mtime":1613341910013,"results":"30","hashOfConfig":"17"},{"size":943,"mtime":1613341881392,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ruapaa",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\index.js",[],["68","69"],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\App.js",["70","71","72"],"import \"./App.css\";\r\nimport React, { useEffect, useReducer, useState } from \"react\";\r\nimport Context from \"./context/context\";\r\nimport StartScreen from \"./Screens/StartScreenPackage/StartScreen\";\r\nimport Registration from \"./Screens/Registration\";\r\nimport PersonalData from \"./Screens/PersonalData\";\r\nimport MainScreen from \"./Screens/MainScreen\";\r\nimport EnterScreen from \"./Screens/EnterScreen\";\r\n// import Profile from \"./Screens/Profile\";\r\n\r\nfunction App() {\r\n  const [arr, setArr] = useState([]);\r\n  let userName;\r\n\r\n  useEffect(() => {\r\n    updateBase();\r\n  }, []);\r\n\r\n  function updateBase() {\r\n    fetch(\"https://tinderteam.ru/api/getAllUsers\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setArr(data);\r\n      });\r\n  }\r\n\r\n  const reducerMatch = (stateMatch, actionMatch) => {\r\n    switch (actionMatch.type) {\r\n      case \"initMatch\":\r\n        return {\r\n          image: actionMatch.linkImage,\r\n          name: actionMatch.name,\r\n          position: actionMatch.position,\r\n          email: actionMatch.email,\r\n          telegram: actionMatch.telegram,\r\n        };\r\n      case \"addMatch\":\r\n        return {\r\n          ...stateMatch,\r\n          lifePos: actionMatch.lifePos,\r\n          teamStatus: actionMatch.teamStatus,\r\n          wordPlace: actionMatch.wordPlace,\r\n          projectTime: actionMatch.projectTime,\r\n          tags: actionMatch.tags,\r\n        };\r\n      default:\r\n        return stateMatch;\r\n    }\r\n  };\r\n\r\n  const [dataStateMatch, dispatchDataMatch] = useReducer(reducerMatch, {\r\n    image: \"\",\r\n    name: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    telegram: \"\",\r\n    lifePos: \"\",\r\n    teamStatus: \"\",\r\n    wordPlace: \"\",\r\n    projectTime: \"\",\r\n    tags: [],\r\n  });\r\n\r\n  const initMatch = (linkImage, name, position, email, telegram) =>\r\n    dispatchDataMatch({\r\n      type: \"initMatch\",\r\n      linkImage,\r\n      name,\r\n      position,\r\n      email,\r\n      telegram,\r\n    });\r\n\r\n  const addMatch = (lifePos, teamStatus, wordPlace, projectTime, tags) =>\r\n    dispatchDataMatch({\r\n      type: \"addMatch\",\r\n      lifePos,\r\n      teamStatus,\r\n      wordPlace,\r\n      projectTime,\r\n      tags,\r\n    });\r\n\r\n  async function findMatch(userName) {\r\n    let name = userName;\r\n    let response = await fetch(\"https://tinderteam.ru/api/getMatch\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({ name }),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        initMatch(\r\n          `${data.image}`,\r\n          `${data.name}`,\r\n          `${data.position}`,\r\n          `${data.email}`,\r\n          `${data.telegram}`\r\n        );\r\n        addMatch(\r\n          `${data.lifePos}`,\r\n          `${data.teamStatus}`,\r\n          `${data.wordPlace}`,\r\n          `${data.projectTime}`,\r\n          data.tags\r\n        );\r\n      });\r\n    await showMatch();\r\n  }\r\n\r\n  const [statePage, setStatePage] = React.useState(0);\r\n  const [modal, setModal] = React.useState({\r\n    isOpen: false,\r\n    image: \"\",\r\n    name: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    telegram: \"\",\r\n    lifePos: \"\",\r\n    teamStatus: \"\",\r\n    workPlace: \"\",\r\n    projectTime: \"\",\r\n    tags: [],\r\n  });\r\n\r\n  function hanldeModal(\r\n    operUser,\r\n    imageUser,\r\n    nameUser,\r\n    positionUser,\r\n    emailUser,\r\n    telegramUser,\r\n    lifePosUser,\r\n    teamStatusUser,\r\n    workPlaceUser,\r\n    projectTimeUser,\r\n    tagsUser\r\n  ) {\r\n    setModal({\r\n      isOpen: operUser,\r\n      image: imageUser,\r\n      name: nameUser,\r\n      position: positionUser,\r\n      email: emailUser,\r\n      telegram: telegramUser,\r\n      lifePos: lifePosUser,\r\n      teamStatus: teamStatusUser,\r\n      workPlace: workPlaceUser,\r\n      projectTime: projectTimeUser,\r\n      tags: tagsUser,\r\n    });\r\n  }\r\n\r\n  const components = [\r\n    <StartScreen />,\r\n    <EnterScreen />,\r\n    <Registration />,\r\n    <PersonalData />,\r\n    <MainScreen />,\r\n  ];\r\n\r\n\r\n\r\n  async function send() {\r\n    let response = await fetch(\"https://tinderteam.ru/api/registration\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(dataState),\r\n    });\r\n  }\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"init\":\r\n        return {\r\n          image: action.linkImage,\r\n          name: action.name,\r\n          position: action.position,\r\n          email: action.email,\r\n          telegram: action.telegram,\r\n        };\r\n      case \"add\":\r\n        return {\r\n          ...state,\r\n          lifePos: action.lifePos,\r\n          teamStatus: action.teamStatus,\r\n          wordPlace: action.wordPlace,\r\n          projectTime: action.projectTime,\r\n          tags: action.tags,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [dataState, dispatchData] = useReducer(reducer, {\r\n    image: \"\",\r\n    name: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    telegram: \"\",\r\n    lifePos: \"\",\r\n    teamStatus: \"\",\r\n    wordPlace: \"\",\r\n    projectTime: \"\",\r\n    tags: [],\r\n  });\r\n\r\n  const init = (linkImage, name, position, email, telegram) =>\r\n    dispatchData({ type: \"init\", linkImage, name, position, email, telegram });\r\n\r\n  const add = (lifePos, teamStatus, wordPlace, projectTime, tags) =>\r\n    dispatchData({\r\n      type: \"add\",\r\n      lifePos,\r\n      teamStatus,\r\n      wordPlace,\r\n      projectTime,\r\n      tags,\r\n    });\r\n\r\n  function setActivePanel(i) {\r\n    setStatePage(i);\r\n  }\r\n\r\n  const [match, setMatch] = useState(false);\r\n\r\n  function showMatch() {\r\n    setMatch(!match);\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        setActivePanel,\r\n        hanldeModal,\r\n        modal,\r\n        init,\r\n        add,\r\n        send,\r\n        dataState,\r\n        arr,\r\n        match,\r\n        showMatch,\r\n        findMatch,\r\n\r\n        initMatch,\r\n        addMatch,\r\n        dataStateMatch,\r\n\r\n        updateBase,\r\n      }}\r\n    >\r\n      <div className=\"App\">{components[statePage]}</div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\reportWebVitals.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Registration.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\PersonalData.js",["73"],"import React, { useContext, useEffect } from \"react\";\r\nimport Context from \"../context/context\";\r\nimport icon from \"../images/icon.png\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nfunction PersonalData() {\r\n  const {\r\n    setActivePanel,\r\n    add,\r\n    send,\r\n    findMatch,\r\n    arr,\r\n    dataState,\r\n    updateBase,\r\n  } = useContext(Context);\r\n\r\n  let userTags = [];\r\n  let tegsUsed = 0;\r\n\r\n  function checkParams() {\r\n    let userLifePos = document.querySelector(\"#lifePos\").value;\r\n    let userTeamStatus = document.querySelector(\"#teamStatus\").value;\r\n    let userWordPlace = document.querySelector(\"#workPlace\").value;\r\n    let userProjectTime = document.querySelector(\"#projectTime\").value;\r\n    var inputs = document.querySelectorAll(\"input[type='checkbox']\");\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      if (inputs[i].checked) {\r\n        tegsUsed++;\r\n      }\r\n    }\r\n\r\n    if (\r\n      userLifePos !== \"Выбрать\" &&\r\n      userTeamStatus !== \"Выбрать\" &&\r\n      userWordPlace !== \"Выбрать\" &&\r\n      userProjectTime !== \"Выбрать\" &&\r\n      tegsUsed > 0\r\n    ) {\r\n      document.querySelector(\".startButton\").removeAttribute(\"disabled\");\r\n\r\n      document.querySelector(\".startButton\").style.background =\r\n        \"linear-gradient(to right, #fa76cf, #c571f5)\";\r\n    } else {\r\n      document\r\n        .querySelector(\".startButton\")\r\n        .setAttribute(\"disabled\", \"disabled\");\r\n      document.querySelector(\".startButton\").style.background =\r\n        \"rgba(0, 0, 0, 0.15)\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkParams();\r\n  }, []);\r\n\r\n  function handleSubmitData() {\r\n    let userLifePos = document.querySelector(\"#lifePos\").value;\r\n    let userTeamStatus = document.querySelector(\"#teamStatus\").value;\r\n    let userWordPlace = document.querySelector(\"#workPlace\").value;\r\n    let userProjectTime = document.querySelector(\"#projectTime\").value;\r\n\r\n    var inputs = document.querySelectorAll(\"input[type='checkbox']\");\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      if (inputs[i].checked) {\r\n        userTags.push(inputs[i].value);\r\n        console.log(inputs[i].value);\r\n      }\r\n    }\r\n\r\n    add(\r\n      `${userLifePos}`,\r\n      `${userTeamStatus}`,\r\n      `${userWordPlace}`,\r\n      `${userProjectTime}`,\r\n      userTags\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"1rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <form id=\"survey-form\">\r\n        <div id=\"dataForm\">\r\n          <div>\r\n            <img\r\n              style={{ height: \"36px\", width: \"36px\", paddingRight: \"1rem\" }}\r\n              src={icon}\r\n              alt=\"icon\"\r\n            />\r\n            <img\r\n              style={{\r\n                borderWidth: \"0px\",\r\n                height: \"23px\",\r\n                width: \"97px\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n              src={logo}\r\n              alt=\"logo\"\r\n            />\r\n          </div>\r\n          <h1 style={{ marginBottom: \"3rem\" }}>Расскажи о себе</h1>\r\n          <label className=\"selectInput\">\r\n            <p>\r\n              <strong>Жизненная позиция</strong>\r\n            </p>\r\n            <select\r\n              style={{ width: \"16rem\" }}\r\n              className=\"input_fields\"\r\n              id=\"lifePos\"\r\n              onChange={() => {\r\n                checkParams();\r\n                handleSubmitData();\r\n              }}\r\n              required\r\n            >\r\n              <option defaultValue>Выбрать</option>\r\n              <option value=\"Беру максимум от возможностей\">\r\n                Беру максимум от возможностей\r\n              </option>\r\n              <option value=\"Всегда в движении\">Всегда в движении</option>\r\n              <option value=\"Верю в карму\">Верю в карму</option>\r\n              <option value=\"Стремлюсь быть лучше, чем вчера\">\r\n                Стремлюсь быть лучше, чем вчера\r\n              </option>\r\n              <option value=\"Прокачиваю осознанность\">\r\n                Прокачиваю осознанность\r\n              </option>\r\n            </select>\r\n          </label>\r\n          <label className=\"selectInput\">\r\n            <p>\r\n              <strong>Командный статус</strong>\r\n            </p>\r\n            <select\r\n              style={{ width: \"16rem\" }}\r\n              className=\"input_fields\"\r\n              id=\"teamStatus\"\r\n              onChange={() => {\r\n                checkParams();\r\n                handleSubmitData();\r\n              }}\r\n              required\r\n            >\r\n              <option defaultValue>Выбрать</option>\r\n              <option value=\"Мотиватор - вдохновляю и поддерживаю\">\r\n                Мотиватор - вдохновляю и поддерживаю\r\n              </option>\r\n              <option value=\"Критик - а вернее, улучшатель\">\r\n                Критик - а вернее, улучшатель\r\n              </option>\r\n              <option value=\"Исследователь - знаю где и как реализовать любую идею\">\r\n                Исследователь - знаю где и как реализовать любую идею\r\n              </option>\r\n              <option value=\"Генератор - придумываю идеи 24/7\">\r\n                Генератор - придумываю идеи 24/7\r\n              </option>\r\n              <option value=\"В поисках себя\">В поисках себя</option>\r\n            </select>\r\n          </label>\r\n          <label className=\"selectInput\">\r\n            <p>\r\n              <strong>Место работы</strong>\r\n            </p>\r\n            <select\r\n              style={{ width: \"16rem\" }}\r\n              className=\"input_fields\"\r\n              id=\"workPlace\"\r\n              onChange={() => {\r\n                checkParams();\r\n                handleSubmitData();\r\n              }}\r\n              required\r\n            >\r\n              <option defaultValue>Выбрать</option>\r\n              <option value=\"Офис\">Офис</option>\r\n              <option value=\"Дом\">Дом</option>\r\n              <option value=\"И дома, и в офисе\">И дома, и в офисе</option>\r\n              <option value=\"Внешний коворкинг\">Внешний коворкинг</option>\r\n              <option value=\"Кафе\">Кафе</option>\r\n            </select>\r\n          </label>\r\n          <label className=\"selectInput\">\r\n            <p>\r\n              <strong>В отношениях с проектом</strong>\r\n            </p>\r\n            <select\r\n              style={{ width: \"16rem\" }}\r\n              className=\"input_fields\"\r\n              id=\"projectTime\"\r\n              onChange={() => {\r\n                checkParams();\r\n                handleSubmitData();\r\n              }}\r\n              required\r\n            >\r\n              <option defaultValue>Выбрать</option>\r\n              <option value=\"0-1 месяца\">0-1 месяца</option>\r\n              <option value=\"1-3 месяца\">1-3 месяца</option>\r\n              <option value=\"3-6 месяца\">3-6 месяца</option>\r\n              <option value=\"Скоро год\">Скоро год</option>\r\n              <option value=\"Только что познакомились\">\r\n                Только что познакомились\r\n              </option>\r\n            </select>\r\n          </label>\r\n          <label\r\n            className=\"selectInput\"\r\n            htmlFor=\"telegram\"\r\n          >\r\n            <p>\r\n              <strong>Интересы (Отметь сколько хочешь тегов)</strong>\r\n            </p>\r\n            <div className=\"tegsLabel\">\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"sport\"\r\n                  value=\"Авторское кино\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Авторское кино\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"serials\"\r\n                  value=\"Документальное кино\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Документальное кино\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"films\"\r\n                  value=\"Драмы\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Драмы\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cook\"\r\n                  value=\"Комедии\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Комедии\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"music\"\r\n                  value=\"Сериалы\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Сериалы\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"zoj\"\r\n                  value=\"Бизнес литература\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Бизнес литература\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"IT\"\r\n                  value=\"Художественная литература\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Художественная литература\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"languages\"\r\n                  value=\"Индивидуальный спорт\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Индивидуальный спорт\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Командный спорт\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Командный спорт\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Киберспорт\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Киберспорт\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Инди-музыка\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Инди-музыка\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Поп-музыка\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Поп-музыка\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Тяжелая музыка\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Тяжелая музыка\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Электронная музыка\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Электронная музыка\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Походный туризм\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Походный туризм\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Автомобильный туризм\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Автомобильный туризм\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Экстремальный туризм\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Экстремальный туризм\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Архитектура\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Архитектура\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Животные\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Животные\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Инностранные языки\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Инностранные языки\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Кухни мира\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Кухни мира\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Экология\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Экология\r\n              </label>\r\n              <label className=\"lable_checkbox\">\r\n                <input\r\n                  onChange={() => {\r\n                    checkParams();\r\n                    handleSubmitData();\r\n                  }}\r\n                  className=\"input_checkbox\"\r\n                  name=\"prefer\"\r\n                  id=\"cybersport\"\r\n                  value=\"Работа 24/7\"\r\n                  type=\"checkbox\"\r\n                />\r\n                Работа 24/7\r\n              </label>\r\n            </div>\r\n          </label>\r\n          <div className=\"inputReq\">\r\n            <button\r\n              className=\"req_Back_Button\"\r\n              type=\"submit\"\r\n              onClick={() => setActivePanel(2)}\r\n            >\r\n              <strong>Предыдущий шаг</strong>\r\n            </button>\r\n            <button\r\n              className=\"startButton\"\r\n              type=\"submit\"\r\n              form=\"survey-form\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                send();\r\n                if (dataState) {\r\n                  setTimeout(() => {\r\n                    setActivePanel(4);\r\n                    updateBase();\r\n                  }, 500);\r\n                  arr.length > 1 && findMatch(dataState.name);\r\n                }\r\n              }}\r\n            >\r\n              <strong>Начать общаться</strong>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonalData;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Profile.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\StartScreen.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\Scrollbar.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\ScrollbarItem.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalItem.js",[],["74","75"],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\context\\context.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\MainScreen.js",["76"],"import React, { useContext } from \"react\";\r\nimport ModalItem from \"../Modal/ModalItem\";\r\nimport ModalMatch from \"../Modal/ModalMatch\";\r\nimport icon from \"../images/icon.png\";\r\nimport logo from \"../images/logo.svg\";\r\nimport ScroollbarItem from \"../Screens/StartScreenPackage/ScrollbarItem\";\r\nimport Context from \"../context/context\";\r\nimport ModalEmptyDB from \"../Modal/ModalEmtyDB\";\r\n\r\nfunction MainScreen() {\r\n  const {\r\n    arr,\r\n    match,\r\n    findMatch,\r\n    dataState,\r\n    setActivePanel,\r\n    init,\r\n    add,\r\n  } = useContext(Context);\r\n\r\n  let countID = 0;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"headerMain\">\r\n        <div className=\"logotype\">\r\n          <img\r\n            style={{ height: \"36px\", width: \"36px\", paddingRight: \"1rem\" }}\r\n            src={icon}\r\n            alt=\"icon\"\r\n          />\r\n          <img\r\n            style={{\r\n              borderWidth: \"0px\",\r\n              height: \"23px\",\r\n              width: \"97px\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n            src={logo}\r\n            alt=\"logo\"\r\n          />\r\n        </div>\r\n        <div className=\"navButtons\">\r\n          {arr.length > 1 && !match && (\r\n            <button\r\n              className=\"navButton1\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                findMatch(dataState.name);\r\n              }}\r\n            >\r\n              Подобрать\r\n            </button>\r\n          )}\r\n          <button\r\n            className=\"navButton\"\r\n            onClick={() => {\r\n              init(\"\", \"\", \"\", \"\", \"\");\r\n              add(\"\", \"\", \"\", \"\", []);\r\n              setActivePanel(0);\r\n            }}\r\n          >\r\n            На стартовую страницу\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mainBlock\">\r\n        {arr.length > 1 ? (\r\n          <div className=\"itemsBar\">\r\n            {arr.map((item) => {\r\n              countID++;\r\n              if (item.name !== dataState.name) {\r\n                return (\r\n                  <ScroollbarItem\r\n                    linkItem={item.image}\r\n                    nameItem={item.name}\r\n                    positionItem={item.position}\r\n                    emailUser={item.email}\r\n                    telegramItem={item.telegram}\r\n                    lifePosItem={item.lifePos}\r\n                    teamStatusItem={item.teamStatus}\r\n                    workPlaceItem={item.wordPlace}\r\n                    projectTimeItem={item.projectTime}\r\n                    tagsItem={item.tags}\r\n                    key={countID}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <ModalEmptyDB />\r\n        )}\r\n      </div>\r\n      <ModalItem />\r\n      <ModalMatch />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\EnterScreen.js",["77","78","79"],"import React, { useContext, useEffect } from \"react\";\r\nimport Context from \"../context/context\";\r\nimport icon from \"../images/icon.png\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nfunction EnterScreen() {\r\n  const {\r\n    setActivePanel,\r\n    init,\r\n    add,\r\n    findMatch,\r\n    arr,\r\n    updateBase,\r\n    dataState,\r\n    dataStateMatch,\r\n  } = useContext(Context);\r\n\r\n  function checkParams() {\r\n    let userFirstName = document.querySelector(\"#firstName\").value;\r\n    let userLastName = document.querySelector(\"#lastName\").value;\r\n\r\n    if (userFirstName.length !== 0 && userLastName.length !== 0) {\r\n      document.querySelector(\".startButton\").removeAttribute(\"disabled\");\r\n      document.querySelector(\".startButton\").style.background =\r\n        \"linear-gradient(to right, #fa76cf, #c571f5)\";\r\n    } else {\r\n      document\r\n        .querySelector(\".startButton\")\r\n        .setAttribute(\"disabled\", \"disabled\");\r\n      document.querySelector(\".startButton\").style.background =\r\n        \"rgba(0, 0, 0, 0.15)\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkParams();\r\n  }, []);\r\n\r\n  async function handleSubmit() {\r\n    let newData;\r\n    let name =\r\n      document.querySelector(\"#firstName\").value +\r\n      \" \" +\r\n      document.querySelector(\"#lastName\").value;\r\n\r\n    let response = await fetch(\"https://tinderteam.ru/api/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({ name }),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        newData = data;\r\n        if (data) {\r\n          init(\r\n            `${data.image && data.image}`,\r\n            `${data.name}`,\r\n            `${data.position}`,\r\n            `${data.email}`,\r\n            `${data.telegram}`\r\n          );\r\n          add(\r\n            `${data.lifePos}`,\r\n            `${data.teamStatus}`,\r\n            `${data.wordPlace}`,\r\n            `${data.projectTime}`,\r\n            data.tags\r\n          );\r\n        }\r\n      });\r\n      if (newData) {\r\n        setTimeout(() => {\r\n          setActivePanel(4);\r\n          updateBase();\r\n        }, 500)\r\n        arr.length > 1 && findMatch(name);\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"6rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <form id=\"survey-form\">\r\n        <div>\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"36px\",\r\n                width: \"36px\",\r\n                paddingRight: \"1rem\",\r\n              }}\r\n              src={icon}\r\n              alt=\"icon\"\r\n            />\r\n            <img\r\n              style={{\r\n                borderWidth: \"0px\",\r\n                height: \"23px\",\r\n                width: \"97px\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n              src={logo}\r\n              alt=\"logo\"\r\n            />\r\n          </div>\r\n          <h1 style={{ fontSize: \"50px\", marginBottom: \"3rem\" }}>Вход</h1>\r\n          <label htmlFor=\"firstName\">\r\n            <input\r\n              onChange={checkParams}\r\n              className=\"input_fields_text\"\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"Имя\"\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor=\"lastName\">\r\n            <input\r\n              onChange={checkParams}\r\n              className=\"input_fields_text\"\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Фамилия\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <div className=\"buttons_Enter\">\r\n            <button\r\n              className=\"req_Back_Button\"\r\n              type=\"submit\"\r\n              style={{\r\n                width: \"13rem\",\r\n              }}\r\n              onClick={() => setActivePanel(0)}\r\n            >\r\n              <strong>Назад</strong>\r\n            </button>\r\n            <button\r\n              style={{\r\n                width: \"13rem\",\r\n              }}\r\n              className=\"startButton\"\r\n              id=\"idStartBtn\"\r\n              type=\"submit\"\r\n              form=\"survey-form\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Продолжить\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnterScreen;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalMatch.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalEmtyDB.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":13,"column":7,"nodeType":"86","messageId":"87","endLine":13,"endColumn":15},{"ruleId":"84","severity":1,"message":"88","line":88,"column":9,"nodeType":"86","messageId":"87","endLine":88,"endColumn":17},{"ruleId":"84","severity":1,"message":"88","line":171,"column":9,"nodeType":"86","messageId":"87","endLine":171,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":54,"column":6,"nodeType":"91","endLine":54,"endColumn":8,"suggestions":"92"},{"ruleId":"80","replacedBy":"93"},{"ruleId":"82","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":71,"column":29,"nodeType":"97","messageId":"98","endLine":71,"endColumn":31},{"ruleId":"84","severity":1,"message":"99","line":14,"column":5,"nodeType":"86","messageId":"87","endLine":14,"endColumn":14},{"ruleId":"84","severity":1,"message":"100","line":15,"column":5,"nodeType":"86","messageId":"87","endLine":15,"endColumn":19},{"ruleId":"84","severity":1,"message":"88","line":46,"column":9,"nodeType":"86","messageId":"87","endLine":46,"endColumn":17},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'userName' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkParams'. Either include it or remove the dependency array.","ArrayExpression",["103"],["101"],["102"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'dataState' is assigned a value but never used.","'dataStateMatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [checkParams]",{"range":"106","text":"107"},[1554,1556],"[checkParams]"]
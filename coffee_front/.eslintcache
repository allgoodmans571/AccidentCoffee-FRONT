[{"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\index.js":"1","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\App.js":"2","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\reportWebVitals.js":"3","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Registration.js":"4","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\PersonalData.js":"5","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Profile.js":"6","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\StartScreen.js":"7","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\Scrollbar.js":"8","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\ScrollbarItem.js":"9","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalItem.js":"10","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\context\\context.js":"11","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\MainScreen.js":"12","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\EnterScreen.js":"13","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalMatch.js":"14"},{"size":501,"mtime":1612390926934,"results":"15","hashOfConfig":"16"},{"size":4966,"mtime":1612889381326,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":3617,"mtime":1612862264719,"results":"19","hashOfConfig":"16"},{"size":7775,"mtime":1612890039709,"results":"20","hashOfConfig":"16"},{"size":2796,"mtime":1612538974830,"results":"21","hashOfConfig":"16"},{"size":2252,"mtime":1612890596273,"results":"22","hashOfConfig":"16"},{"size":3126,"mtime":1612890013810,"results":"23","hashOfConfig":"16"},{"size":1277,"mtime":1612868737870,"results":"24","hashOfConfig":"16"},{"size":3797,"mtime":1612870403846,"results":"25","hashOfConfig":"16"},{"size":97,"mtime":1612391721143,"results":"26","hashOfConfig":"16"},{"size":4243,"mtime":1612940636488,"results":"27","hashOfConfig":"16"},{"size":3542,"mtime":1612876425612,"results":"28","hashOfConfig":"16"},{"size":5510,"mtime":1612889491730,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ruapaa",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\index.js",[],["61","62"],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\App.js",["63","64"],"import \"./App.css\";\r\nimport React, { useEffect, useReducer, useState } from \"react\";\r\nimport Context from \"./context/context\";\r\nimport StartScreen from \"./Screens/StartScreenPackage/StartScreen\";\r\nimport Registration from \"./Screens/Registration\";\r\nimport PersonalData from \"./Screens/PersonalData\";\r\nimport MainScreen from \"./Screens/MainScreen\";\r\nimport EnterScreen from \"./Screens/EnterScreen\";\r\n// import Profile from \"./Screens/Profile\";\r\n\r\nfunction App() {\r\n  const [arr, setArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://68.183.12.32:8080/getAllUsers\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setArr(data);\r\n      });\r\n  }, []);\r\n\r\n  // const [matchModal, setMatchModal] = React.useState({\r\n  //   isOpen: false,\r\n  //   image: \"\",\r\n  //   name: \"\",\r\n  //   position: \"\",\r\n  //   email: \"\",\r\n  //   telegram: \"\",\r\n  //   lifePos: \"\",\r\n  //   teamStatus: \"\",\r\n  //   workPlace: \"\",\r\n  //   projectTime: \"\",\r\n  //   tags: [],\r\n  // });\r\n\r\n  function findMatch() {\r\n    let name = dataState.name;\r\n    let response = fetch(\"http://68.183.12.32:8080/getMatch\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({ name }),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        init(\r\n          `${data.name}`,\r\n          `${data.position}`,\r\n          `${data.email}`,\r\n          `${data.telegram}`\r\n        );\r\n        add(\r\n          `${data.lifePos}`,\r\n          `${data.teamStatus}`,\r\n          `${data.wordPlace}`,\r\n          `${data.projectTime}`,\r\n          data.tags\r\n        );\r\n      });\r\n    setTimeout(() => showMatch(), 500);\r\n  }\r\n\r\n  const [statePage, setStatePage] = React.useState(0);\r\n  const [modal, setModal] = React.useState({\r\n    isOpen: false,\r\n    image: \"\",\r\n    name: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    telegram: \"\",\r\n    lifePos: \"\",\r\n    teamStatus: \"\",\r\n    workPlace: \"\",\r\n    projectTime: \"\",\r\n    tags: [],\r\n  });\r\n\r\n  // TODO передавать объект, избавиться от такой кучи аргументов\r\n  function hanldeModal(\r\n    operUser,\r\n    imageUser,\r\n    nameUser,\r\n    positionUser,\r\n    emailUser,\r\n    telegramUser,\r\n    lifePosUser,\r\n    teamStatusUser,\r\n    workPlaceUser,\r\n    projectTimeUser,\r\n    tagsUser\r\n  ) {\r\n    setModal({\r\n      isOpen: operUser,\r\n      image: imageUser,\r\n      name: nameUser,\r\n      position: positionUser,\r\n      email: emailUser,\r\n      telegram: telegramUser,\r\n      lifePos: lifePosUser,\r\n      teamStatus: teamStatusUser,\r\n      workPlace: workPlaceUser,\r\n      projectTime: projectTimeUser,\r\n      tags: tagsUser,\r\n    });\r\n  }\r\n\r\n  const components = [\r\n    <StartScreen />,\r\n    <EnterScreen />,\r\n    <Registration />,\r\n    <PersonalData />,\r\n    <MainScreen />,\r\n  ];\r\n\r\n  async function send() {\r\n    console.log(dataState.name);\r\n    let response = await fetch(\"http://68.183.12.32:8080/registration\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(dataState),\r\n    });\r\n  }\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"init\":\r\n        return {\r\n          name: action.name,\r\n          position: action.position,\r\n          email: action.email,\r\n          telegram: action.telegram,\r\n        };\r\n      case \"add\":\r\n        return {\r\n          ...state,\r\n          lifePos: action.lifePos,\r\n          teamStatus: action.teamStatus,\r\n          workPlace: action.workPlace,\r\n          projectTime: action.projectTime,\r\n          tags: action.tags,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [dataState, dispatchData] = useReducer(reducer, {\r\n    name: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    telegram: \"\",\r\n    lifePos: \"\",\r\n    teamStatus: \"\",\r\n    workPlace: \"\",\r\n    projectTime: \"\",\r\n    tags: [],\r\n  });\r\n\r\n  const init = (name, position, email, telegram) =>\r\n    dispatchData({ type: \"init\", name, position, email, telegram });\r\n  const add = (lifePos, teamStatus, workPlace, projectTime, tags) =>\r\n    dispatchData({\r\n      type: \"add\",\r\n      lifePos,\r\n      teamStatus,\r\n      workPlace,\r\n      projectTime,\r\n      tags,\r\n    });\r\n\r\n  function setActivePanel(i) {\r\n    setStatePage(i);\r\n  }\r\n\r\n  const [match, setMatch] = useState(false);\r\n\r\n  function showMatch() {\r\n    setMatch(!match);\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        setActivePanel,\r\n        hanldeModal,\r\n        modal,\r\n        init,\r\n        add,\r\n        send,\r\n        dataState,\r\n        arr,\r\n        match,\r\n        showMatch,\r\n        findMatch,\r\n      }}\r\n    >\r\n      <div className=\"App\">{components[statePage]}</div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\reportWebVitals.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Registration.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\PersonalData.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\Profile.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\StartScreen.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\Scrollbar.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\StartScreenPackage\\ScrollbarItem.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalItem.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\context\\context.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\MainScreen.js",[],"C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Screens\\EnterScreen.js",["65"],"import React, { useContext } from \"react\";\r\nimport Context from \"../context/context\";\r\nimport icon from \"../images/icon.png\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nfunction EnterScreen() {\r\n  const { setActivePanel, init } = useContext(Context);\r\n\r\n  async function handleSubmit() {\r\n    let name =\r\n      document.querySelector(\"#firstName\").value +\r\n      \" \" +\r\n      document.querySelector(\"#lastName\").value;\r\n\r\n    let response = await fetch(\"http://68.183.12.32:8080/getMatch\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({ name }),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        init(`${data.name}`);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"6rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <form id=\"survey-form\">\r\n        <div id=\"reqForm\">\r\n          <div>\r\n            <img\r\n              style={{\r\n                height: \"36px\",\r\n                width: \"36px\",\r\n                paddingRight: \"1rem\",\r\n              }}\r\n              src={icon}\r\n              alt=\"icon\"\r\n            />\r\n            <img\r\n              style={{\r\n                borderWidth: \"0px\",\r\n                height: \"23px\",\r\n                width: \"97px\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n              src={logo}\r\n              alt=\"logo\"\r\n            />\r\n          </div>\r\n          <h1 style={{ fontSize: \"50px\", marginBottom: \"3rem\" }}>Вход</h1>\r\n          <label htmlFor=\"firstName\">\r\n            <input\r\n              className=\"input_fields_text\"\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"Имя\"\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor=\"lastName\">\r\n            <input\r\n              className=\"input_fields_text\"\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Фамилия\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <div\r\n            className=\"selectInput\"\r\n            style={{\r\n              marginTop: \"3rem\",\r\n              gridTemplateColumns: \"43% 50%\",\r\n            }}\r\n          >\r\n            <button\r\n              className=\"req_Back_Button\"\r\n              type=\"submit\"\r\n              onClick={() => setActivePanel(0)}\r\n            >\r\n              <strong>Назад</strong>\r\n            </button>\r\n            <button\r\n              className=\"startButton\"\r\n              type=\"submit\"\r\n              form=\"survey-form\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                handleSubmit();\r\n                setActivePanel(4);\r\n              }}\r\n            >\r\n              Продолжить\r\n            </button>\r\n          </div>\r\n\r\n          {/* <div style={{ marginTop: \"3rem\" }}>\r\n            <button\r\n              className=\"startButton\"\r\n              type=\"submit\"\r\n              form=\"survey-form\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                handleSubmit();\r\n                setActivePanel(4);\r\n              }}\r\n            >\r\n              <strong>Войти</strong>\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnterScreen;\r\n","C:\\Users\\bogda\\OneDrive\\Документы\\CROC\\Coffee\\AccidentCoffee-FRONT\\coffee_front\\src\\Modal\\ModalMatch.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":41,"column":9,"nodeType":"72","messageId":"73","endLine":41,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":124,"column":9,"nodeType":"72","messageId":"73","endLine":124,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":15,"column":9,"nodeType":"72","messageId":"73","endLine":15,"endColumn":17},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]